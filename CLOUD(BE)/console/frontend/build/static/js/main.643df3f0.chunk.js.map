{"version":3,"sources":["lib/api.ts","hooks/user/useAuth.ts","hooks/common/useRouter.ts","components/main/Auth.tsx","pages/AuthPage.tsx","components/main/Main.tsx","hooks/block/useBlock.ts","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["axios","defaults","withCredentials","api","create","baseURL","useAuth","router","params","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","push","replace","pathname","query","queryString","parse","search","useRouter","useState","id","password","input","setInput","handdleLogin","a","async","data","post","onChange","e","target","name","value","AuthBlock","styled","div","Auth","className","src","Input","placeholder","Button","secondary","onClick","AuthPage","MainBlock","Main","blockList","blocks","setBlocks","useEffect","getBlockList","get","rows","useBlock","map","block","header","event_id","generated_time","version","Table","Row","key","Cell","moment","Date","format","JSON","stringify","fluid","size","icon","celled","selectable","Header","HeaderCell","Body","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","MainPage","App","exact","component","path","ReactDOM","render","document","getElementById"],"mappings":"yTAEAA,IAAMC,SAASC,iBAAkB,EAEjC,IAAMC,EAAMH,IAAMI,OAAO,CACrBC,QAAQ,Q,kBCDG,SAASC,IACpB,IAAMC,ECFH,WACH,IAAMC,EAASC,cACTC,EAAWC,cACXC,EAAUC,cACVC,EAAQC,cAId,OAAOC,mBAAQ,WACb,MAAO,CAELC,KAAML,EAAQK,KACdC,QAASN,EAAQM,QACjBC,SAAUT,EAASS,SAInBC,MAAM,eACDC,IAAYC,MAAMZ,EAASa,QAD3B,GAEAf,GAILM,QACAJ,WACAE,aAED,CAACJ,EAAQM,EAAOJ,EAAUE,IDzBdY,GADc,EAEHC,mBAAS,CAC/BC,GAAI,GACJC,SAAU,KAJe,mBAEtBC,EAFsB,KAEfC,EAFe,KAuB7B,MAAO,CACHC,aARiB,SAAMF,GAAN,SAAAG,EAAAC,OAAA,kEAAAD,EAAA,ODVHE,ECWkBL,EDXQzB,EAAI+B,KAAJ,cAAwBD,KCU/C,QAEN,IAFM,QAGb1B,EAAOK,QAAQK,KAAK,KAHP,iCDVJ,IAACgB,MCkBAE,SAjBD,SAACC,GAAO,IAAD,EACEA,EAAEC,OAAjBC,EADa,EACbA,KAAMC,EADO,EACPA,MAEbV,EAAS,eACFD,EADC,eAEHU,EAAOC,MAYYX,S,quBEvBhC,IAAMY,EAAYC,IAAOC,IAAV,KA8CAC,EAfF,WAAO,IAAD,EACyBrC,IAAjC6B,EADQ,EACRA,SAAUL,EADF,EACEA,aAAcF,EADhB,EACgBA,MAC/B,OACI,kBAACY,EAAD,KAEI,yBAAKI,UAAU,aACf,yBAAKC,IAAI,cACL,kBAACC,EAAA,EAAD,CAAOC,YAAY,gEAAcT,KAAK,KAAKH,SAAUA,IACrD,kBAACW,EAAA,EAAD,CAAOC,YAAY,sEAAeT,KAAK,WAAWH,SAAUA,IAC5D,kBAACa,EAAA,EAAD,CAAQC,WAAS,EAACC,QAAS,kBAAIpB,EAAaF,KAA5C,yBClCDuB,MARf,WACI,OACI,6BACI,kBAAC,EAAD,Q,gqCCSZ,IAAMC,EAAYX,IAAOC,IAAV,KA2HAW,EA7EF,WAAO,IAGVC,EC7DK,WAAoB,IAAD,EACF7B,mBAAS,IADP,mBACvB8B,EADuB,KACfC,EADe,KAG9BC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAe,4BAAA3B,EAAAC,OAAA,kEAAAD,EAAA,MNFM5B,EAAIwD,IAAJ,WMEN,gBACV1B,EADU,EACVA,KAEPuB,EAAUvB,EAAKsB,OAAOK,MAHL,sCAKrB,MAAO,CACHL,UD8CaM,GAAVN,OAEkBO,KAAI,SAACC,GAAgB,IACnCrC,EAAoBqC,EAApBrC,GAAIsC,EAAgBD,EAAhBC,OAAQ/B,EAAQ8B,EAAR9B,KACZgC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,eAA2BF,EAAXG,QAGjC,OACI,kBAACC,EAAA,EAAMC,IAAP,CAAWC,IAAK5C,GACZ,kBAAC0C,EAAA,EAAMG,KAAP,KAAa7C,GACb,kBAAC0C,EAAA,EAAMG,KAAP,KAAaC,IAAO,IAAIC,KAAoB,IAAfP,IAAsBQ,OAAO,wBAC1D,kBAACN,EAAA,EAAMG,KAAP,KAAaN,GACb,kBAACG,EAAA,EAAMG,KAAP,KAAaI,KAAKC,UAAU3C,QAKxC,OACI,kBAACmB,EAAD,KACI,6BACI,gCACI,8BAGA,yBAAKP,IAAI,cACT,kBAACG,EAAA,EAAD,CAAQC,WAAS,GAAjB,6BAIJ,yBAAKL,UAAU,cACX,yBAAKA,UAAU,QAAf,KACM,uCAEN,yBAAKA,UAAU,QAAf,KACM,yCAEN,yBAAKA,UAAU,QAAf,KACM,uCAEN,yBAAKA,UAAU,QAAf,KACM,2CAGV,yBAAKA,UAAU,QACX,kBAACE,EAAA,EAAD,CAAO+B,OAAK,EAACC,KAAK,MAAMC,KAAK,SAAShC,YAAY,cAClD,kBAACqB,EAAA,EAAD,CAAOY,QAAM,EAAEC,YAAU,GACrB,kBAACb,EAAA,EAAMc,OAAP,KACA,kBAACd,EAAA,EAAMC,IAAP,KACI,kBAACD,EAAA,EAAMe,WAAP,WACA,kBAACf,EAAA,EAAMe,WAAP,uBACA,kBAACf,EAAA,EAAMe,WAAP,iBACA,kBAACf,EAAA,EAAMe,WAAP,eAIJ,kBAACf,EAAA,EAAMgB,KAAP,KACK9B,KAIb,gCACI,kBAAC+B,EAAA,EAAD,CACIC,cAAe,EACfC,kBAAmB,EACnBC,aAAc,KACdC,UAAW,KACXC,SAAU,KACVC,aAAc,EACdC,WAAY,SEtHrBC,MARf,WACI,OACI,6BACI,kBAAC,EAAD,QCSGC,EAXO,WACpB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,UAAWH,EAAUI,KAAK,MACvC,kBAAC,IAAD,CAAOF,OAAK,EAACC,UAAW7C,EAAU8C,KAAK,c,iBCF/CC,IAASC,OACD,kBAAC,IAAD,KACI,kBAAC,EAAD,OAGRC,SAASC,eAAe,W","file":"static/js/main.643df3f0.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\nconst api = axios.create({\n    baseURL: `/v1`,\n});\n\nexport const getBlocks = () => api.get(`/block`)\n\nexport const login = (data):Promise<boolean> => api.post(`/auth/login`, data);","import react, {useCallback, useEffect, useState} from 'react';\nimport { login } from '../../lib/api';\nimport { useRouter } from '../common/useRouter';\n\nexport default function useAuth(){\n    const router = useRouter();\n    const [input, setInput] = useState({\n        id: '',\n        password: ''\n    })\n\n    const onChange = (e) => {\n        const {name, value} = e.target;\n\n        setInput({\n            ...input,\n            [name]: value\n        })\n    }\n\n    const handdleLogin = async(input) => {\n        const res:boolean = await login(input);\n        if(res === true){\n            router.history.push('/');\n        }\n    }\n\n    return {\n        handdleLogin, onChange, input\n    }\n}","import React, {useMemo} from 'react'\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string';\nexport function useRouter() {\n    const params = useParams();\n    const location = useLocation();\n    const history = useHistory();\n    const match = useRouteMatch();\n  \n    // Return our custom router object\n    // Memoize so that a new object is only returned if something changes\n    return useMemo(() => {\n      return {\n        // For convenience add push(), replace(), pathname at top level\n        push: history.push,\n        replace: history.replace,\n        pathname: location.pathname,\n        // Merge params and parsed query string into single \"query\" object\n        // so that they can be used interchangeably.\n        // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n        query: {\n          ...queryString.parse(location.search), // Convert string to object\n          ...params\n        },\n        // Include match, location, history objects so we have\n        // access to extra React Router functionality if needed.\n        match,\n        location,\n        history\n      };\n    }, [params, match, location, history]);\n  }","import React, { useState, } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport {useHistory} from 'react-router-dom';\nimport useAuth from '../../hooks/user/useAuth';\nconst AuthBlock = styled.div`\n    height: 100vh;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    img{\n        width: 100%;\n        margin-bottom: 1.5rem;\n    }\n    .container{\n        margin-top: 1rem;\n        box-shadow : 0px 0px 8px rgba(0, 0, 0, 0.125);\n        //border: 3px solid rgba(0, 0, 0, 0.01);\n        padding: 2rem;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 520px;\n        .input{\n            width: 100%;\n            margin-bottom: 1rem;\n        }\n        .button{\n            width: 100%;\n        }\n    }\n`;\n\nconst Auth = () => {\n    const {onChange, handdleLogin, input} = useAuth();\n    return (\n        <AuthBlock>\n            \n            <div className='container'>\n            <img src='/logo.png'></img>\n                <Input placeholder='아이디를 입력해주세요' name='id' onChange={onChange} ></Input>\n                <Input placeholder='비밀번호를 입력해주세요' name='password' onChange={onChange} ></Input>\n                <Button secondary onClick={()=>handdleLogin(input)}>로그인</Button>\n            </div>\n        </AuthBlock>\n    )\n}\n\nexport default Auth;","import React, { useState } from 'react';\nimport Auth from '../components/main/Auth';\n\nfunction AuthPage() {\n    return (\n        <div>\n            <Auth></Auth>\n        </div>\n    )\n}\n\nexport default AuthPage;\n","import React, {useState} from 'react';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    Header,\n    Input,\n    Pagination,\n    Table,\n  } from 'semantic-ui-react'\nimport useBlock from '../../hooks/block/useBlock';\nimport moment  from 'moment';\nimport { json } from 'express';\n\nconst MainBlock = styled.div`\n    background-color: rgba(0, 0, 0, 0.03);\n    \n    header{\n        padding: 2rem;\n        background-color: white;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        img{\n            width: 40rem;\n        }\n    }\n    .card-group{\n        background-color: white;\n        display: flex;\n        flex-direction: row;\n        margin-top: 1.5rem;\n        padding: 2rem;\n        margin-bottom: 1.5rem;\n        .card{\n            margin-right: 1.5rem;\n            padding: 2.5rem;\n            padding-bottom: 2.2rem;\n            box-shadow : 0px 0px 8px rgba(0, 0, 0, 0.125);\n            font-size: 3rem;\n            font-weight: bold;\n            min-width: 15rem;\n            span{\n                font-weight: lighter;\n                font-size: 1.5rem;\n            }\n        }\n        \n    }\n    .list{\n        padding: 2rem;\n        background-color: white;\n    }\n    footer{\n        background-color: white;\n        display: flex;\n        justify-content: center;\n    }\n    \n`;\nconst Main = () => {\n    const {blocks} = useBlock();\n\n    const blockList = blocks.map((block: any) => {\n        const {id, header, data} = block;\n        const {event_id, generated_time, version} = header;\n        \n        \n        return (\n            <Table.Row key={id}>\n                <Table.Cell>{id}</Table.Cell>\n                <Table.Cell>{moment(new Date(generated_time*1000)).format('YYYY-MM-DD hh:mm:ss')}</Table.Cell>\n                <Table.Cell>{event_id}</Table.Cell>\n                <Table.Cell>{JSON.stringify(data)}</Table.Cell>\n            </Table.Row>\n        )\n    });\n\n    return (\n        <MainBlock>\n            <div>\n                <header>\n                    <div>\n\n                    </div>\n                    <img src='/logo.png'/>\n                    <Button secondary>\n                        로그아웃\n                    </Button>\n                </header>\n                <div className='card-group'>\n                    <div className='card'>\n                        5 <span>Node</span>\n                    </div>\n                    <div className='card'>\n                        2 <span>Blocks</span>\n                    </div>\n                    <div className='card'>\n                        1 <span>Orgs</span>\n                    </div>\n                    <div className='card'>\n                        3 <span>Cluster</span>\n                    </div>\n                </div>\n                <div className='list'>\n                    <Input fluid size=\"big\" icon='search' placeholder='Search...' />\n                    <Table celled  selectable>\n                        <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>id</Table.HeaderCell>\n                            <Table.HeaderCell>generated_time</Table.HeaderCell>\n                            <Table.HeaderCell>event_id</Table.HeaderCell>\n                            <Table.HeaderCell>data</Table.HeaderCell>\n                        </Table.Row>\n                        </Table.Header>\n\n                        <Table.Body>\n                            {blockList}\n                        </Table.Body>\n                    </Table>\n                </div>\n                <footer>\n                    <Pagination\n                        boundaryRange={0}\n                        defaultActivePage={1}\n                        ellipsisItem={null}\n                        firstItem={null}\n                        lastItem={null}\n                        siblingRange={1}\n                        totalPages={10}\n                    />\n                </footer>\n            </div>      \n        </MainBlock>\n    )\n}\n\nexport default Main;","import react, {useCallback, useEffect, useState} from 'react';\nimport { getBlocks } from '../../lib/api';\n\nexport default function useBlock(){\n    const [blocks, setBlocks] = useState([]);\n\n    useEffect(()=>{\n        getBlockList();\n    }, []);\n\n    const getBlockList = async() => {\n        const {data} = await getBlocks();\n\n        setBlocks(data.blocks.rows);\n    }\n    return {\n        blocks\n    }\n}","import React, { useState } from 'react';\n\nimport Main from '../components/main/Main';\n\nfunction MainPage() {\n    return (\n        <div>\n            <Main></Main>\n        </div>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport AuthPage from './pages/AuthPage';\nimport MainPage from './pages/MainPage';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact component={MainPage} path='/'></Route>\n        <Route exact component={AuthPage} path='/login'></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport {HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n        <HashRouter>\n            <App />\n        </HashRouter>\n        , \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}